/* Editor container styling */
.action-editor-wrapper {
  background-color: white;
  border: 1px solid #ccc;
  border-radius: 6px;
  box-shadow: inset 0 1px 2px rgba(0,0,0,0.05);
  min-height: 2.5em; /* Updated min-height */
  padding: 0.5em;
  display: flex; /* <-- Add flex display */
  align-items: center; /* Align items vertically */
  flex-wrap: wrap; /* Allow items to wrap */
  gap: 0.25rem; /* Add a small gap between nodes */
}

.action-editor-wrapper .ProseMirror {
  width: 100%;
  outline: none;
  flex-grow: 1;
  min-height: 2.5em;
  padding: 0; /* Remove padding from ProseMirror itself if wrapper has it */
}

.action-editor-wrapper .ProseMirror p { 
  margin: 0 !important; /* Important to override prose defaults */
}

.action-editor-wrapper .ProseMirror:focus {
  outline: none;
}

/* Optional: Hide default Tiptap empty node placeholder if using custom one */
.action-editor-wrapper .ProseMirror p.is-editor-empty::before {
  content: none;
}

/* Custom Placeholder Styling (applied via JS to wrapper) */
.action-editor-wrapper[data-placeholder]::after {
  content: attr(data-placeholder);
  pointer-events: none;
  color: #adb5bd; /* Light gray */
  display: none; /* Hidden by default */
  margin-left: 5px;
  font-style: italic;
}

.action-editor-wrapper.show-placeholder .action-editor-wrapper .ProseMirror p::after {
  display: inline-block; /* Show only when wrapper has class */
}

/* Make sure placeholder appears after content */
.action-editor-wrapper .ProseMirror p {
  display: flex;
  align-items: center;
  flex-wrap: wrap;
}

/* DND Drop Target Styling */
.action-editor-wrapper.is-drag-over {
  outline: 2px dashed #90cdf4; /* Light blue dashed outline */
  outline-offset: 2px;
}

.action-editor-wrapper.can-drop {
  background-color: #ebf8ff; /* Very light blue background */
  outline-color: #4299e1; /* Blue solid outline */
}

.action-editor-wrapper.cannot-drop {
  background-color: #fff5f5; /* Very light red background */
  outline-color: #f56565; /* Red solid outline */
}

.action-editor-wrapper.is-over.can-drop {
  border-color: #3b82f6; /* blue-500 */
}

/* DND Drop Placeholder Styling */
.dnd-drop-placeholder {
  position: absolute; /* Handled inline now, but keep class for clarity */
  height: 2px; /* Thin line placeholder */
  width: 80px; /* Approximate width */
  background-color: #3b82f6; /* Blue color */
  border-radius: 1px;
  /* Adjust transform if needed to center precisely under cursor */
  /* transform: translateY(-50%); */
}

.dragging-node-hidden {
  visibility: hidden;
}

/* Selection styling is handled in index.css */

.action-editor-wrapper .ProseMirror p { 
  margin: 0 !important; /* Important to override prose defaults */
}

/* General styling for the component wrapper */
.action-editor-component {
  position: relative;
  border: 1px solid #ddd;
  border-radius: 4px;
  background-color: #fff;
  transition: box-shadow 0.2s ease-in-out;
}

/* Style for when a draggable item is over the editor */
.action-editor-component.is-over {
  box-shadow: 0 0 10px 2px rgba(0, 123, 255, 0.5); /* Blue glow */
}

/* Custom ProseMirror styles */
.ProseMirror {
  padding: 10px;
  min-height: 100px;
  outline: none;
  cursor: text;
  line-height: 1.6;
}

.ProseMirror p.is-editor-empty:first-child::before {
  content: attr(data-placeholder);
  float: left;
  color: #adb5bd;
  pointer-events: none;
  height: 0;
}

/* Phase 3: Style Overrides for Selection and Errors */

/* Override Tiptap's default selection which hides our border */
.ProseMirror-selectednode {
  background-color: transparent !important; /* Ensure override */
  outline: none;
  box-shadow: 0 0 0 2px #8cf; /* Blue selection shadow */
}

/* Style for nodes that have an error */
.action-node.has-error {
  /* Use box-shadow for the error indicator */
  box-shadow: 0 0 0 3px rgba(255, 0, 0, 1);
}

/* When an error node is also selected by Tiptap, combine the shadows */
.action-node.has-error.ProseMirror-selectednode {
  /* Red shadow "inside" a slightly thicker blue selection shadow */
  box-shadow: 0 0 0 3px rgba(255, 0, 0, 1), 0 0 0 5px #8cf;
} 